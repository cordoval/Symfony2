<?php

namespace PHRentals\MainBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\ORM\EntityManager;

/**
 * ContactRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactRepository extends EntityRepository
{
	
	public function findNextRef()
	{
		$ref = $this->getEntityManager()
		->createQuery('SELECT MAX(c.ownerRef) FROM PHRentalsMainBundle:Contact c')
		->getSingleScalarResult();
		//$ref= $result[0]->;
		$ref++;
		
		return $ref;
	}
	
	public function findAjaxValue($term)
	{
		$qb = $this->getEntityManager()->createQueryBuilder();
		$query = $qb->select('c')
		->from('PHRentalsMainBundle:Contact','c')
		->andWhere('c.name LIKE \'%'.str_replace('\'', '\'\'', $term).'%\'');
		
		$contacts = $qb->getQuery()->getResult();

		return $contacts;
	}
	
	public function findAjaxDevValue($term)
	{
		$qb = $this->getEntityManager()->createQueryBuilder();
		$query = $qb->select('c')
		->from('PHRentalsMainBundle:Contact','c')
		->innerJoin('c.contactTypes', 'ct')
		->andWhere('ct.name = \'Developer\'')
		->andWhere('c.name LIKE \'%'.str_replace('\'', '\'\'', $term).'%\'');
	
		$contacts = $qb->getQuery()->getResult();
	
		return $contacts;
	}
	
	public function findContacts($data)
	{

		if(!$data['reference'] && !$data['generalsearch']) {
			return false;
		}
		
		if ($data['refentity'] == 'P') $data['pRef'] = $data['reference'];
		if ($data['refentity'] == 'O') $data['oRef'] = $data['reference'];
		if ($data['refentity'] == 'K') $data['kRef'] = $data['reference'];

		$qb = $this->getEntityManager()->createQueryBuilder();
	
		$query = $qb->select('c')
		->from('PHRentalsMainBundle:Contact','c')
		->leftJoin('c.units', 'p')
		->leftJoin('c.reps', 'r')
		->leftJoin('c.emails', 'e')
		->leftJoin('p.project', 'pr')
		->leftJoin('p.contracts', 'pc')
		->leftJoin('pc.contract', 'pcc');
		//->leftJoin('c.contactTypes', 'o');
	
		if ($data['generalsearch']) {
			$query->andWhere('c.name LIKE \'%'.str_replace('\'', '\'\'', $data['generalsearch']).'%\' OR p.num LIKE \'%'.str_replace('\'', '\'\'', $data['generalsearch']).'%\' OR pr.name LIKE \'%'.str_replace('\'', '\'\'', $data['generalsearch']).'%\' OR r.name LIKE \'%'.str_replace('\'', '\'\'', $data['generalsearch']).'%\' OR r.email LIKE \'%'.str_replace('\'', '\'\'', $data['generalsearch']).'%\' OR e.email LIKE \'%'.str_replace('\'', '\'\'', $data['generalsearch']).'%\'');
		}
		/*
		if ($data['contactType']) {
			$query->andWhere('o.id = \''.$data['contactType'].'\'');
		}
		*/
		if(isset($data['oRef']))
		if ($data['oRef']) {
			$query->andWhere('c.ownerRef LIKE \'%'.$data['oRef'].'%\' OR c.oldOwnerRef LIKE \'%'.$data['oRef'].'%\'');
		}
		if(isset($data['kRef']))
		if ($data['kRef']) {
			$query->andWhere('pcc.kRef LIKE \'%'.$data['kRef'].'%\'');
		}
		if(isset($data['pRef']))
		if ($data['pRef']) {
			$query->andWhere('p.pRef LIKE \'%'.$data['pRef'].'%\'');
		}
		
		$contacts = $qb->getQuery()->getResult();
	
		//$reservation->getDateFrom()->format('Y-m-d')
	
	
		return $contacts;
	}
	
	
}